id: meshtastic-web
title: "meshtastic_web"
version: 0.0.0
# Release notes for the update - can be a string, paragraph or URL
release-notes: |
  init for StartOS 0.3.5.x
  - initial deploy for version to 0.3.5
# The type of license for the project. Include the LICENSE in the root of the project directory. A license is required for a Start9 package.
license: GNU GPL v3.0
# The repository URL for the package. This repo contains the manifest file (this), any scripts necessary for configuration, backups, actions, or health checks (more below). This key must exist. But could be embedded into the source repository. 
wrapper-repo: "https://github.com/auggie-lahey/meshtastic-web-startos"
upstream-repo: "https://github.com/meshtastic/web"
build: ["make"]
description:
  # This is the first description visible to the user in the marketplace.
  short: Mestastic Web Client
  # This description will display with additional details in the service's individual marketplace page
  long: |
    Meshtastic Web is a Meshtastic client that runs directly in your browser. 
assets:
  license: LICENSE
  icon: icon.svg
  instructions: instructions.md
  # Default = image.tar
  # docker-images: image.tar
main:
  type: docker
  image: main
  # The executable binary for starting the initialization action. For docker actions, this is typically a "docker_entrypoint.sh" file. See the Dockerfile and the docker_entrypoint.sh in this project for additional details.
  entrypoint: "docker_entrypoint.sh"
  # Any arguments that should be passed into the entrypoint executable 
  args: []
  # Specifies where to mount the data volume(s), if there are any. Mounts for pointer dependency volumes are also denoted here. These are necessary if data needs to be read from / written to these volumes. 
  mounts:
    # Specifies where on the service's file system its persistence directory should be mounted prior to service startup
    main: /root
# Specifies whether GPU acceleration is enabled or not. False by default.
  gpu-acceleration: false
# Defines what architectures will be supported by the service. This service supports x86_64 and aarch64 architectures.
hardware-requirements:
  arch:
    - x86_64
    - aarch64
# This is where health checks would be defined - see a more advanced example in https://github.com/Start9Labs/start9-pages-startos
health-checks:
  web-ui:
    name: Web Interface
    success-message: The meshtatic is accessible
    type: script
config: ~
# dependencies: {}
# properties: ~
#  type: script
# This denotes any data, asset, or pointer volumes that should be connected when the "docker run" command is invoked
volumes:
  # This is the image where files from the project asset directory will go
  main:
    type: data
# This specifies how to configure the port mapping for exposing the service over TOR and LAN (if applicable). Many interfaces can be specified depending on the needs of the service. If it can be launched over a Local Area Network connection, specify a `lan-config`. Otherwise, at minimum, a `tor-config` must be specified.
interfaces:
  # This key is the internal name that the OS will use to configure the interface
  main:
    name: Mestastic
    description: Meshtastic Web UI
    tor-config:
      port-mapping:
        80: "8080"
    lan-config:
      443:
        ssl: true
        internal: 8080
    ui: true
    protocols:
      - tcp
      - http
dependencies: {}
backup:
  create:
    type: docker
    image: compat
    system: true 
    entrypoint: compat 
    args:
      - duplicity
      - create
      - /mnt/backup
      - /root/data
    mounts:
      BACKUP: "/mnt/backup" 
      main: "/root/data"
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - restore
      - /mnt/backup
      - /root/data
    mounts:
      BACKUP: "/mnt/backup"
      main: "/root/data"
migrations:
  from:
    "*":
      type: script
      args: ["from"]
  to:
    "*":
      type: script
      args: ["to"]
